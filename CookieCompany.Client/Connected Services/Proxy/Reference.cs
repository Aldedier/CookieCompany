//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CookieCompany.Client.Proxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Proxy.IProductsService")]
    public interface IProductsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetProducts", ReplyAction="http://tempuri.org/IProductsService/GetProductsResponse")]
        string[] GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetProducts", ReplyAction="http://tempuri.org/IProductsService/GetProductsResponse")]
        System.Threading.Tasks.Task<string[]> GetProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetProductsById", ReplyAction="http://tempuri.org/IProductsService/GetProductsByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CookieCompany.Model.Services.FaultExcepcion.ProductoFault), Action="http://demoswcf/Producto/ProductoIdFault", Name="ServicioError", Namespace="https://miservicioerror.com")]
        string GetProductsById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetProductsById", ReplyAction="http://tempuri.org/IProductsService/GetProductsByIdResponse")]
        System.Threading.Tasks.Task<string> GetProductsByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/Productos", ReplyAction="http://tempuri.org/IProductsService/ProductosResponse")]
        CookieCompany.Model.Services.Data.ProductoDTO[] Productos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/Productos", ReplyAction="http://tempuri.org/IProductsService/ProductosResponse")]
        System.Threading.Tasks.Task<CookieCompany.Model.Services.Data.ProductoDTO[]> ProductosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetProductoById", ReplyAction="http://tempuri.org/IProductsService/GetProductoByIdResponse")]
        CookieCompany.Model.Services.Data.ProductoDTO GetProductoById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetProductoById", ReplyAction="http://tempuri.org/IProductsService/GetProductoByIdResponse")]
        System.Threading.Tasks.Task<CookieCompany.Model.Services.Data.ProductoDTO> GetProductoByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/AddProduct", ReplyAction="http://tempuri.org/IProductsService/AddProductResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CookieCompany.Model.Services.FaultExcepcion.ProductoFault), Action="http://demoswcf/Producto/ProductoFault", Name="ServicioError", Namespace="https://miservicioerror.com")]
        void AddProduct(CookieCompany.Model.Services.Data.ProductoDTO producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/AddProduct", ReplyAction="http://tempuri.org/IProductsService/AddProductResponse")]
        System.Threading.Tasks.Task AddProductAsync(CookieCompany.Model.Services.Data.ProductoDTO producto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductsServiceChannel : CookieCompany.Client.Proxy.IProductsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductsServiceClient : System.ServiceModel.ClientBase<CookieCompany.Client.Proxy.IProductsService>, CookieCompany.Client.Proxy.IProductsService {
        
        public ProductsServiceClient() {
        }
        
        public ProductsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<string[]> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
        
        public string GetProductsById(int id) {
            return base.Channel.GetProductsById(id);
        }
        
        public System.Threading.Tasks.Task<string> GetProductsByIdAsync(int id) {
            return base.Channel.GetProductsByIdAsync(id);
        }
        
        public CookieCompany.Model.Services.Data.ProductoDTO[] Productos() {
            return base.Channel.Productos();
        }
        
        public System.Threading.Tasks.Task<CookieCompany.Model.Services.Data.ProductoDTO[]> ProductosAsync() {
            return base.Channel.ProductosAsync();
        }
        
        public CookieCompany.Model.Services.Data.ProductoDTO GetProductoById(int id) {
            return base.Channel.GetProductoById(id);
        }
        
        public System.Threading.Tasks.Task<CookieCompany.Model.Services.Data.ProductoDTO> GetProductoByIdAsync(int id) {
            return base.Channel.GetProductoByIdAsync(id);
        }
        
        public void AddProduct(CookieCompany.Model.Services.Data.ProductoDTO producto) {
            base.Channel.AddProduct(producto);
        }
        
        public System.Threading.Tasks.Task AddProductAsync(CookieCompany.Model.Services.Data.ProductoDTO producto) {
            return base.Channel.AddProductAsync(producto);
        }
    }
}
